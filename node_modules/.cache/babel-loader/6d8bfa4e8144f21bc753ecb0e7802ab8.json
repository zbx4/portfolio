{"ast":null,"code":"var _jsxFileName = \"/home/administrador/Documents/ReactWS/portfolio/src/components/landing/contactForm.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst config = {\n  cors: 'https://cors-anywhere.herokuapp.com/',\n  // <optional> doesn't display the cors error\n  formUrl: 'https://docs.google.com/forms/d/e/<GOOGLE_FORM_ID>/formResponse'\n};\n\nconst Input = ({\n  name,\n  label,\n  doChange,\n  type = 'text'\n}) => {\n  return React.createElement(\"label\", {\n    htmlFor: name,\n    className: \"form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, label, React.createElement(\"input\", {\n    type: type,\n    id: name,\n    name: name,\n    onChange: doChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }));\n};\n\nclass ContactForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputs: {\n        name: {\n          id: 2005620554,\n          value: ''\n        },\n        email: {\n          id: 1045781291,\n          value: ''\n        },\n        phone: {\n          id: 1166974658,\n          value: null\n        },\n        message: {\n          id: 839337160,\n          value: ''\n        }\n      }\n    };\n\n    this.doSubmit = async e => {\n      e.preventDefault();\n      const inputs = this.state.inputs;\n      const formData = new FormData();\n      /*    _.map(inputs, (item) => {\n            formData.append(`entry.${item.id}`, item.value)\n          });*/\n\n      await axios({\n        url: \"\".concat(config.cors).concat(config.formUrl),\n        method: 'post',\n        data: formData,\n        responseType: 'json'\n      }).then(() => {//     console.log('response', response);\n      }).catch(err => {\n        console.log('err', err);\n      });\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            value = _e$target.value,\n            name = _e$target.name;\n      const inputs = this.state.inputs;\n      inputs[name].value = value;\n      this.setState({\n        inputs\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      name: \"contact-form\",\n      onSubmit: this.doSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Contact Form\"), React.createElement(Input, {\n      name: \"name\",\n      label: \"Name\",\n      doChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Input, {\n      name: \"email\",\n      label: \"Email\",\n      doChange: this.handleChange,\n      type: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Input, {\n      name: \"phone\",\n      label: \"Phone number\",\n      doChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"message\",\n      className: \"form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Message\", React.createElement(\"textarea\", {\n      id: \"message\",\n      name: \"message\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Send message\"))));\n  }\n\n} //ReactDOM.render(<ContactForm />, document.getElementById('app'));\n\n\nexport default ContactForm;","map":{"version":3,"sources":["/home/administrador/Documents/ReactWS/portfolio/src/components/landing/contactForm.js"],"names":["React","Component","axios","config","cors","formUrl","Input","name","label","doChange","type","ContactForm","state","inputs","id","value","email","phone","message","doSubmit","e","preventDefault","formData","FormData","url","method","data","responseType","then","catch","err","console","log","handleChange","target","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst config = {\n  cors: 'https://cors-anywhere.herokuapp.com/', // <optional> doesn't display the cors error\n  formUrl: 'https://docs.google.com/forms/d/e/<GOOGLE_FORM_ID>/formResponse' \n};\n\nconst Input = ({ name, label, doChange, type='text'}) => {\n  return (\n    <label htmlFor={name} className=\"form-label\">\n      { label }\n      <input type={type} id={name} name={name} onChange={doChange} />\n    </label>\n  )\n}\n\nclass ContactForm extends React.Component {\n  \n  /**\n  I think this way to organize the 'inputs' is more clearest.\n  The 'id' property is the input field in your google form,\n  for example the 'name' field, if you inpect you Google form this should looks like 'entry.2005620554'\n  */\n  state = {\n    inputs: {\n      name: { id: 2005620554, value: '' },\n      email: { id: 1045781291, value: '' },\n      phone: { id: 1166974658, value: null },\n      message: { id: 839337160, value: '' }\n    }\n  }\n\ndoSubmit = async (e) => {\n    e.preventDefault();\n\n    const { inputs } = this.state;\n    const formData = new FormData();\n\n/*    _.map(inputs, (item) => {\n      formData.append(`entry.${item.id}`, item.value)\n    });*/\n\n    await axios({\n      url: `${config.cors}${config.formUrl}`,\n      method: 'post',\n      data: formData,\n      responseType: 'json'\n    })\n    .then(() => {\n //     console.log('response', response);\n    })\n    .catch(err => {\n      console.log('err', err);\n    })\n  }\n\n  handleChange = (e) => {\n    const { value, name } = e.target;\n    const { inputs } = this.state;\n\n    inputs[name].value = value;\n    \n    this.setState({\n      inputs\n    });\n  }\n\n  render() {\n    return (<form name=\"contact-form\" onSubmit={this.doSubmit}>\n          <fieldset>\n            <legend>Contact Form</legend>\n\n            <Input name=\"name\" label=\"Name\" doChange={this.handleChange} />\n            <Input name=\"email\" label=\"Email\" doChange={this.handleChange} type=\"email\" />\n            <Input name=\"phone\" label=\"Phone number\" doChange={this.handleChange} />\n\n            <label htmlFor=\"message\" className=\"form-label\">\n              Message\n              <textarea id=\"message\" name=\"message\" onChange={this.handleChange} />\n            </label>\n\n            <p>\n              <button className=\"btn\">Send message</button>\n            </p>\n          </fieldset>\n      </form>);\n  }\n}\n\n//ReactDOM.render(<ContactForm />, document.getElementById('app'));\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}