{"version":3,"sources":["components/landing/Header.js","components/landing/ServiceItem.js","components/landing/Services.js","components/Bar.js","components/landing/ProjectItem.js","components/landing/Projects.js","components/landing/Contact.js","components/landing/SkillItem.js","components/landing/Skills.js","App.js","serviceWorker.js","index.js"],"names":["subInfo","Header","state","textIdx","this","timeout","setInterval","currentIdx","setState","clearInterval","subtext","length","id","className","variant","href","Component","ServiceItem","image","props","service","imageTitle","title","style","cardStyle","Body","src","alt","icStyle","Title","Text","cardTextStyle","description","color","height","marginBottom","width","alignSelf","marginTop","Services","responsive","0","items","700","1024","padding","paddingLeft","paddingRight","serviceItems","services","map","key","Bar","collapseOnSelect","expand","fixed","bg","Brand","Toggle","aria-controls","Collapse","Link","ProjectItem","project","visitEnabled","projectLink","Projects","projectItems","projects","Contact","name","email","message","frameborder","marginheight","marginwidth","SkillItem","skill","Skills","skills","App","url","Helmet","charSet","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfec6fb3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button';\nimport './header.css';\n\nconst subInfo = [\n          \"Turn that project idea into reality\",\n          \"Get a website for your business\",\n          \"All built with modern technologies\"\n        ];\n\nclass Header extends Component {\n\n    constructor() {\n        super();\n        this.state = { textIdx: 0 };\n    }\n\n    componentDidMount() {\n        this.timeout = setInterval(() => {\n        let currentIdx = this.state.textIdx;\n        this.setState({ textIdx: currentIdx + 1 });\n        }, 3000);\n    }\n\n    componentDidUnmount() {\n        clearInterval(this.timeout);\n    }\n    \n    render() {\n        const image =`./head1.jpg`;\n        const alt = '';\n        let subtext = subInfo[this.state.textIdx % subInfo.length];\n\n\n        return (\n            <div id=\"home\" className=\"App-header heroContainer\">\n     \n                <h1 className=\"headerTitle\">Software development <br/> to help you achieve your goals</h1>\n                <div className=\"headerSubtitle\">\n                    <p className=\"subtitle\">{subtext}</p>\n                </div>\n                \n                <Button className=\"contactButton\" variant=\"outline-primary\" href='#contact'>\n                    Contact\n                </Button>\n\n                <div className=\"imageHero\"/>\n                <div className=\"imageOverlay\"/>\n             \n            </div>\n        )\n    }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport Card from 'react-bootstrap/Card';\nimport PropTypes from 'prop-types';\n\nclass ServiceItem extends Component {\n    render() {\n        const image = `./${this.props.service.image}`;\n        const imageTitle = this.props.service.title;\n    \n        return (\n          <Card style={cardStyle}>\n            <Card.Body>\n                <img src={image} alt={imageTitle} style={icStyle}/>\n              <Card.Title>{this.props.service.title}</Card.Title>\n              <Card.Text style={cardTextStyle}>\n                {this.props.service.description}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        )\n    }\n}\n\n/*      <i className=\"material-icons-outlined\" style={{fontSize: '84px', color: this.props.service.color}}>\n                {this.props.service.image}</i>*/\n\nconst cardTextStyle ={\n  color: '#737373'\n}\n\nconst icStyle = {\n  height: '90px',\n  marginBottom: '10px',\n}\n\nconst cardStyle = {\n  width: '300px',\n  height: '230px',\n  alignSelf: 'center',\n  marginTop: '16px'\n}\n\nServiceItem.propTypes = {\n  service: PropTypes.object.isRequired\n}\n\nexport default ServiceItem;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport ServiceItem from './ServiceItem';\nimport './Services.css';\n\nclass Services extends Component {\n    responsive = {\n        0: { items: 1 },\n        700: {items: 2 },\n        1024: { items: 3 },\n    }\n\n    padding =  {\n        paddingLeft: 10,     // in pixels\n        paddingRight: 10\n    }\n\n    render() {\n        const serviceItems = this.props.services.map((service) => (\n            <ServiceItem key={service.id} service={service} />\n            ));\n\n        return (\n            <div className=\"servicesContainer\">\n                <span id=\"services\" className=\"servicesAnchor\"></span>\n                <h3 className=\"servicesTitle\">Services</h3>\n                <div className=\"serviceList\">\n                    {serviceItems}\n                </div>\n            </div>\n        )\n    }\n}\n\n// PropTypes\nServices.propTypes = {\n    services: PropTypes.array.isRequired\n}\n\nexport default Services;\n","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport './Bar.css';\n\nclass Bar extends Component {\n    \n render(){\n\n    return (\n      <Navbar collapseOnSelect expand=\"lg\" fixed=\"top\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"#home\">Home</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link href=\"#services\" className=\"ideSelected\">Services</Nav.Link>\n            <Nav.Link href=\"#projects\" className=\"ideSelected\">Projects</Nav.Link>\n            <Nav.Link href=\"#skills\" className=\"ideSelected\">Technologies</Nav.Link>\n            <Nav.Link href=\"#contact\" className=\"ideSelected\">Contact</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n }\n}\n\nexport default Bar;\n","import React, { Component } from 'react'\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport './ProjectItem.css';\n\nclass ProjectItem extends Component {\n    render() {\n        const image =`./${this.props.project.image}`;\n        return (\n            <div className=\"projectItemContainer\">\n                    <div className=\"projectImage\">\n                        <img src={image} alt={this.props.project.title} />\n                    </div>\n                    <div className=\"projectDescription\">\n                        <h3 className=\"projectTitle\">{this.props.project.title}</h3>\n                        <p className=\"projectDesc\">{this.props.project.description}</p>\n                        {this.props.project.visitEnabled &&\n                            <Button className=\"visitButton\" variant=\"outline-primary\" href={this.props.project.projectLink}>\n                                Visit Project\n                            </Button>\n                        }\n                    </div>\n             </div>    \n        )\n    }\n}\n\nProjectItem.propTypes = {\n    project: PropTypes.object.isRequired\n}\n\nexport default ProjectItem;\n","import React, { Component } from 'react'\nimport ProjectItem from './ProjectItem';\nimport PropTypes from 'prop-types';\nimport './Projects.css';\n\nclass Projects extends Component {\n    render() {\n        const projectItems = this.props.projects.map((project) =>(\n            <ProjectItem key={project.id} project={project} />\n        ));\n\n        return (\n            <div className=\"projectContainer\">\n                <span id=\"projects\" className=\"projectsAnchor\"></span>\n                <h3 className=\"projectsTitle\">Projects</h3>\n                {projectItems}\n            </div>\n        )\n    }\n}\n\nProjects.propTypes = {\n    projects: PropTypes.array.isRequired\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\nimport './Contact.css';\n\nclass Contact extends Component {\n\n    state ={\n        name: '',\n        email: '',\n        message: '',    \n    }\n\n    render() {\n        return(\n            <div className=\"contactContainer\">\n                <span id=\"contact\" className=\"contactAnchor\"></span>\n                <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSdNqynq57dl2_R_VZdZOxhiE3eo6CsCoRcfmiIzy-Pv6Fzpsw/viewform?embedded=true\" width=\"600\" height=\"820\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\" title=\"contactForm\">Loading…</iframe>\n                <div className=\"contactImage\" />\n            </div>\n        )\n    }\n}\n\nexport default Contact;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport './SkillItem.css';\n\nclass SkillItem extends Component {\n    render() {\n        const image =`./${this.props.skill.image}`;\n        const imageTitle = this.props.skill.title;\n        return (\n            <div className=\"skillItemContainer\">\n                 <img src={image} alt={imageTitle} title={imageTitle} style={{width: \"100%\"}}/>\n            </div>\n        )\n    }\n}\n\nSkillItem.propTypes = {\n    skill: PropTypes.object.isRequired\n}\n\nexport default SkillItem;\n","import React, { Component } from 'react'\nimport SkillItem from './SkillItem'\nimport PropTypes from 'prop-types';\nimport './Skills.css';\n\nclass Skills extends Component {\n    render() {\n        return (\n            <div className=\"skillsContainer\">\n                <span id=\"skills\" className=\"skillsAnchor\"></span>\n                <h3 className=\"skillsTitle\">Technologies</h3>\n                <div className=\"skillsContent\">\n                    {this.props.skills.map((skill) => (\n                        <SkillItem key={skill.id} skill={skill}/>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nSkills.propTypes = {\n    skills: PropTypes.array.isRequired\n}\n\nexport default Skills;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Helmet} from \"react-helmet\";\nimport Header from './components/landing/Header';\nimport Services from './components/landing/Services';\nimport Bar from './components/Bar';\nimport Projects from './components/landing/Projects';\nimport Contact from './components/landing/Contact';\nimport Skills from './components/landing/Skills';\n\nclass App extends Component {\n\n  url='';\n\n  state = {\n    services: [\n      {\n        id: 1,\n        title: 'Web Development',\n        description: 'Custom web applications to turn your startup or project idea into a reality',\n        image: 'ic_laptop.png',\n        color: '#8a8a8a'\n      },\n      {\n        id: 2,\n        title: 'Mobile Development',\n        description: 'Cross-platform applications and native Android development',\n        image: 'ic_phone.png',\n        color: '#28a831'\n      },\n      {\n        id: 3,\n        title: 'Wordpress Development',\n        description: 'Get a web page for your business or organization, start a personal blog, etc',\n        image: 'ic_wordpress.png',\n        color: '#5190f5'\n      },\n      {\n        id: 4,\n        title: 'Machine Learning',\n        description: 'Make use of machine learning to improve your business and get insights from data',\n        image: 'ic_ml.png',\n        color: '#e80000'\n      }\n    ],\n    projects: [\n      {\n        id: 21,\n        title: 'Money Manager',\n        description: 'Native Android Application for personal finances. The App helps users take control over their money by keeping track of expenses, bills, budgets, savings, debts and loans. The App also offers reports to know where their money goes.',\n        image: 'proj1.png',\n        projectLink: 'https://play.google.com/store/apps/details?id=com.sharkmoney&hl=en',\n        visitEnabled: true\n      },\n      {\n        id: 22,\n        title: 'Fitness Tracker',\n        description: 'Mobile friendly web application to help people achieve their fitness goals and improve their health. Users can track their calories and workouts and see their progress based on their own goals.',\n        image: 'proj2.png',\n        projectLink: '',\n        visitEnabled: true\n      },\n      {\n        id: 23,\n        title: 'Sign Interpreter',\n        description: \"Mobile application with machine learning technology that helps the average person to understand the sign language. A deep neural network is used to identify images of signs captured with the mobile device's camera.\",\n        image: 'proj3.png',\n        projectLink: '',\n        visitEnabled: false\n      }\n    ],\n    skills:[\n      {\n        id: 51,\n        title: 'java',\n        image: 'zic_java.png'\n      },\n      {\n        id: 52,\n        title: 'python',\n        image: 'zic_python.png'\n      },\n      {\n        id: 53,\n        title: 'javascript',\n        image: 'zic_javascript.png'\n      },\n      {\n        id: 54,\n        title: 'typescript',\n        image: 'zic_typescript.png'\n      },\n      {\n        id: 55,\n        title: 'angular',\n        image: 'zic_angular.png'\n      },\n      {\n        id: 56,\n        title: 'spring',\n        image: 'zic_spring.png'\n      },\n      {\n        id: 57,\n        title: 'mysql',\n        image: 'zic_mysql.png'\n      },\n      {\n        id: 58,\n        title: 'android',\n        image: 'zic_android.png'\n      },\n      {\n        id: 59,\n        title: 'html',\n        image: 'zic_html.png'\n      },\n      {\n        id: 60,\n        title: 'css',\n        image: 'zic_css.png'\n      },\n      {\n        id: 61,\n        title: 'wordpress',\n        image: 'zic_wordpress.png'\n      },\n      {\n        id: 62,\n        title: 'ionic',\n        image: 'zic_ionic.png'\n      },\n      {\n        id: 63,\n        title: 'hibernate',\n        image: 'zic_hibernate.png'\n      },\n      {\n        id: 64,\n        title: 'selenium',\n        image: 'zic_selenium.png'\n      },\n      {\n        id: 65,\n        title: 'react',\n        image: 'zic_react.png'\n      },\n      {\n        id: 66,\n        title: 'tensorflow',\n        image: 'zic_tensorflow.png'\n      }\n    ]\n  };\n\n  /*\n  sendData = (data) => {\n    axios.post(url, {\n        data\n    }).then((res) => {\n      console.log(\"data sent!\");\n    });\n  }*/\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>Portfolio</title>\n        </Helmet>\n        <Bar />\n        <Header />\n        <Services services = {this.state.services}/>\n        <Projects projects={this.state.projects} />\n        <Skills skills = {this.state.skills}/>\n        <Contact/>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}